name: FastAPI CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'fastapi/**'
      - '.github/workflows/fastapi-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'fastapi/**'
      - '.github/workflows/fastapi-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-fastapi-${{ hashFiles('fastapi/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-fastapi-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: fastapi
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio httpx flake8 black

    - name: Lint with flake8
      working-directory: fastapi
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      working-directory: fastapi
      run: |
        black --check .

    - name: Create test database
      working-directory: fastapi
      run: |
        # Create a small test CSV for CI
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv
        echo "00-002,Kraków,Główna,5-15,Kraków,Kraków,małopolskie" >> ../postal_codes_poland.csv
        python create_db.py

    - name: Run tests
      working-directory: fastapi
      run: |
        pytest --cov=. --cov-report=xml --cov-report=term-missing

    - name: Test API endpoints
      working-directory: fastapi
      run: |
        # Start the FastAPI app in background
        uvicorn app:app --host 0.0.0.0 --port 5002 &
        APP_PID=$!
        
        # Wait for app to start
        sleep 5
        
        # Test health endpoint
        curl -f http://localhost:5002/health || exit 1
        
        # Test search endpoint
        curl -f "http://localhost:5002/postal-codes?city=Warszawa" || exit 1
        
        # Test specific postal code endpoint
        curl -f "http://localhost:5002/postal-codes/00-001" || exit 1
        
        # Test locations endpoints
        curl -f "http://localhost:5002/locations" || exit 1
        curl -f "http://localhost:5002/locations/provinces" || exit 1
        
        # Test OpenAPI docs
        curl -f "http://localhost:5002/docs" || exit 1
        curl -f "http://localhost:5002/openapi.json" || exit 1
        
        # Clean up
        kill $APP_PID

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: fastapi/coverage.xml
        flags: fastapi
        name: fastapi-coverage
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run bandit security scan
      working-directory: fastapi
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true

    - name: Check for known security vulnerabilities
      working-directory: fastapi
      run: |
        safety check --json --output safety-report.json || true
        safety check || true

  performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      working-directory: fastapi
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install uvicorn[standard] gunicorn

    - name: Create test database
      working-directory: fastapi
      run: |
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv
        python create_db.py

    - name: Install wrk for performance testing
      run: |
        sudo apt-get update
        sudo apt-get install -y wrk

    - name: Basic performance test
      working-directory: fastapi
      run: |
        # Start FastAPI with Gunicorn
        gunicorn app:app -w 2 -k uvicorn.workers.UvicornWorker --bind 127.0.0.1:8000 &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 5
        
        # Run basic performance test
        wrk -t2 -c10 -d10s --timeout 10s http://127.0.0.1:8000/health
        wrk -t2 -c10 -d10s --timeout 10s "http://127.0.0.1:8000/postal-codes?city=Warszawa"
        
        # Clean up
        kill $SERVER_PID || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      working-directory: fastapi
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install uvicorn[standard] gunicorn

    - name: Create production database
      working-directory: fastapi
      run: |
        # Use test data for build verification
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv
        python create_db.py

    - name: Test production server configurations
      working-directory: fastapi
      run: |
        # Test Uvicorn
        timeout 10s uvicorn app:app --host 127.0.0.1 --port 8001 &
        UVICORN_PID=$!
        sleep 5
        curl -f http://127.0.0.1:8001/health || exit 1
        kill $UVICORN_PID || true
        
        # Test Gunicorn with Uvicorn workers
        timeout 10s gunicorn app:app -w 2 -k uvicorn.workers.UvicornWorker --bind 127.0.0.1:8002 &
        GUNICORN_PID=$!
        sleep 5
        curl -f http://127.0.0.1:8002/health || exit 1
        kill $GUNICORN_PID || true

    - name: Create artifact
      working-directory: fastapi
      run: |
        mkdir -p ../artifacts/fastapi
        cp -r . ../artifacts/fastapi/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: fastapi-app
        path: artifacts/fastapi/
        retention-days: 7