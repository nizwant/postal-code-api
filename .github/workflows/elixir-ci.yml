name: Elixir API CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'elixir/**'
      - '.github/workflows/elixir-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'elixir/**'
      - '.github/workflows/elixir-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir-version: ['1.14', '1.15', '1.16']
        otp-version: ['25', '26']
        
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postal_codes_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir-version }}
        otp-version: ${{ matrix.otp-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          elixir/deps
          elixir/_build
        key: ${{ runner.os }}-mix-${{ matrix.elixir-version }}-${{ matrix.otp-version }}-${{ hashFiles('elixir/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir-version }}-${{ matrix.otp-version }}-
          ${{ runner.os }}-mix-

    - name: Create test database setup
      working-directory: elixir
      run: |
        # Create a small test CSV for CI
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv
        echo "00-002,Kraków,Główna,5-15,Kraków,Kraków,małopolskie" >> ../postal_codes_poland.csv

    - name: Install dependencies
      working-directory: elixir
      run: mix deps.get

    - name: Check formatting
      working-directory: elixir
      run: mix format --check-formatted

    - name: Run Credo (static analysis)
      working-directory: elixir
      run: mix credo --strict

    - name: Compile dependencies
      working-directory: elixir
      run: mix deps.compile

    - name: Compile application
      working-directory: elixir
      run: mix compile --warnings-as-errors

    - name: Create and migrate database
      working-directory: elixir
      env:
        MIX_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
      run: |
        mix ecto.create
        mix ecto.migrate

    - name: Run tests
      working-directory: elixir
      env:
        MIX_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
      run: |
        mix test --cover --export-coverage default
        mix test.coverage

    - name: Generate documentation
      working-directory: elixir
      run: mix docs

    - name: Run Dialyzer (type checking)
      working-directory: elixir
      run: mix dialyzer

    - name: Test production build
      working-directory: elixir
      env:
        MIX_ENV: prod
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
      run: |
        mix deps.get --only prod
        mix compile
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: elixir/cover/excoveralls.json
        flags: elixir
        name: elixir-coverage
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        elixir-version: ['1.16']
        otp-version: ['26']
        
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postal_codes_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir-version }}
        otp-version: ${{ matrix.otp-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          elixir/deps
          elixir/_build
        key: ${{ runner.os }}-mix-${{ matrix.elixir-version }}-${{ matrix.otp-version }}-${{ hashFiles('elixir/mix.lock') }}

    - name: Create test data
      working-directory: elixir
      run: |
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv
        echo "00-002,Kraków,Główna,5-15,Kraków,Kraków,małopolskie" >> ../postal_codes_poland.csv

    - name: Install dependencies
      working-directory: elixir
      run: mix deps.get

    - name: Setup database
      working-directory: elixir
      env:
        MIX_ENV: dev
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
      run: |
        mix ecto.create
        mix ecto.migrate
        mix run --eval "PostalCodeApi.Seeds.run()"

    - name: Start Phoenix server and test API
      working-directory: elixir
      env:
        MIX_ENV: dev
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
        PHX_SERVER: true
        PORT: 5004
      run: |
        # Start Phoenix server in background
        mix phx.server &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:5004/health || exit 1
        
        # Test search endpoint
        curl -f "http://localhost:5004/api/postal-codes?city=Warszawa" || exit 1
        
        # Test specific postal code endpoint
        curl -f "http://localhost:5004/api/postal-codes/00-001" || exit 1
        
        # Test locations endpoints
        curl -f "http://localhost:5004/api/locations" || exit 1
        curl -f "http://localhost:5004/api/locations/provinces" || exit 1
        
        # Clean up
        kill $SERVER_PID || true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          elixir/deps
          elixir/_build
        key: ${{ runner.os }}-mix-security-${{ hashFiles('elixir/mix.lock') }}

    - name: Install dependencies
      working-directory: elixir
      run: mix deps.get

    - name: Check for security vulnerabilities
      working-directory: elixir
      run: |
        mix deps.audit || true
        
    - name: Run Sobelow security analysis
      working-directory: elixir
      run: |
        mix sobelow --config || true

  performance:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postal_codes_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          elixir/deps
          elixir/_build
        key: ${{ runner.os }}-mix-perf-${{ hashFiles('elixir/mix.lock') }}

    - name: Create test data
      working-directory: elixir
      run: |
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv

    - name: Install dependencies
      working-directory: elixir
      run: |
        mix deps.get
        mix deps.compile

    - name: Setup database
      working-directory: elixir
      env:
        MIX_ENV: prod
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
      run: |
        mix ecto.create
        mix ecto.migrate
        mix run --eval "PostalCodeApi.Seeds.run()"

    - name: Install wrk for performance testing
      run: |
        sudo apt-get update
        sudo apt-get install -y wrk

    - name: Basic performance test
      working-directory: elixir
      env:
        MIX_ENV: prod
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_test
        PHX_SERVER: true
        PORT: 5004
      run: |
        # Start Phoenix server
        mix phx.server &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Run basic performance test
        wrk -t2 -c10 -d10s --timeout 10s http://127.0.0.1:5004/health
        wrk -t2 -c10 -d10s --timeout 10s "http://127.0.0.1:5004/api/postal-codes?city=Warszawa"
        
        # Clean up
        kill $SERVER_PID || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postal_codes_prod
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          elixir/deps
          elixir/_build
        key: ${{ runner.os }}-mix-build-${{ hashFiles('elixir/mix.lock') }}

    - name: Create test data
      working-directory: elixir
      run: |
        echo "PNA,Miejscowość,Ulica,Numery,Gmina,Powiat,Województwo" > ../postal_codes_poland.csv
        echo "00-001,Warszawa,Testowa,1-10,Warszawa,Warszawa,mazowieckie" >> ../postal_codes_poland.csv

    - name: Install dependencies
      working-directory: elixir
      run: |
        mix deps.get --only prod
        mix deps.compile

    - name: Compile for production
      working-directory: elixir
      env:
        MIX_ENV: prod
      run: |
        mix compile
        mix assets.deploy
        mix phx.digest

    - name: Build release
      working-directory: elixir
      env:
        MIX_ENV: prod
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_prod
      run: |
        mix release

    - name: Test release
      working-directory: elixir
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postal_codes_prod
        SECRET_KEY_BASE: "test-secret-key-base-for-ci-only-not-for-production"
        PHX_HOST: localhost
        PHX_PORT: 5004
      run: |
        # Create and migrate database
        _build/prod/rel/postal_code_api/bin/postal_code_api eval "PostalCodeApi.Release.migrate"
        
        # Start release in background
        _build/prod/rel/postal_code_api/bin/postal_code_api daemon
        
        # Wait for server to start
        sleep 10
        
        # Test endpoint
        curl -f http://localhost:5004/health || exit 1
        
        # Stop the release
        _build/prod/rel/postal_code_api/bin/postal_code_api stop

    - name: Create artifact
      working-directory: elixir
      run: |
        mkdir -p ../artifacts/elixir
        cp -r _build/prod/rel ../artifacts/elixir/
        cp -r . ../artifacts/elixir/source/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: elixir-app
        path: artifacts/elixir/
        retention-days: 7